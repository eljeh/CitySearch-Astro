---
//import '../../assets/css/components/CitySearch/Filter.css';
---

<div class='filter'>
  <form id='property-filter' action='href' method='GET'>
    <h2>Search</h2>

    <!-- {# City #}  -->
    <div class='form-group has-custom-select'>
      <select name='city' id='city' class='custom-select' required>
        <option class='selectOption'>Select...</option>
        <option selected value='calgary'>Calgary</option>
        <option value='edmonton'>Edmonton</option>
        <option value='red_deer'>Red Deer</option>
      </select>
      <label for='city'>City *</label>
    </div>

    <!-- {# Pricing #}  -->
    <div class='form-control has-custom-select'>
      <select name='price' id='price' class='custom-select'>
        <option value='any'>Any</option>
        <option value='2-bathroom'> 500</option>
        <option value='2-bathroom'> 1000</option>
        <option value='2-bathroom'> 1500</option>
      </select>
      <label for='price'>Price:</label>
    </div>

    <!-- {# Bedrooms #} -->
    <div class='form-control has-custom-select'>
      <select name='bed' id='bed' class='custom-select'>
        <option value='' class='selectOption'>Select ...</option>
        <option value='1-bathroom'>Bachelor</option>
        <option value='1-bathroom'>1 Bedrooms</option>
        <option value='2-bathroom'>2 Bedrooms</option>
        <option value='3--bathroom'>3+ Bedrooms</option>
      </select>
      <label for='bed'>Bedrooms</label>
    </div>

    <!-- {# Bathrooms #} -->
    <div class='form-control has-custom-select'>
      <select name='bath' id='bath' class='custom-select'>
        <option value='' class='selectOption'>Select ...</option>
        <option value='1-bathroom'>1 Bathroom</option>
        <option value='2-bathroom'>2 Bathroom</option>
        <option value='3--bathroom'>3+ Bathroom</option>
      </select>
      <label for='bed'>Bathrooms</label>
    </div>

    <!-- {# Square footage #}  -->
    <div class='form-control has-custom-select'>
      <select name='bath' id='bath' class='custom-select'>
        <option value='' class='selectOption'>Select ...</option>
        <option value='any'>Any</option>
        <option value='2-bathroom'> 500</option>
        <option value='2-bathroom'> 1000</option>
        <option value='2-bathroom'> 1500</option>
      </select>
      <label for='sqft'>Min SQFT:</label>
    </div>

    <!-- {# Housetype #}  -->
    <div class='form-group has-custom-select'>
      <select name='type' id='type' class='custom-select'>
        <option value='' class='selectOption'>Select ...</option>
      </select>
      <label for='type'>Housing Type</label>
    </div>

    <!-- {# pet_friendly #}  -->
    <div class='form-group radio-buttons'>
      <fieldset id='pets' class='form-check'>
        <div class='form-control'>
          <input
            class='form-check-input'
            type='radio'
            name='pets'
            id='yes'
            value='yes'
          />
          <label class='form-check-label' for='yes'>Yes</label>
        </div>
        <div class='form-control'>
          <input
            class='form-check-input'
            type='radio'
            name='pets'
            id='no'
            value='no'
          />
          <label class='form-check-label' for='no'>No</label>
        </div>
      </fieldset>
      <legend>Pet Friendly</legend>
    </div>
    <div class='search-reset'>
      <button
        id='reset'
        class='btn-flat reset_button'
        type='reset'
        value='Reset'>Reset</button
      >
      <button
        type='submit'
        id='search'
        value='submit'
        class='btn-flat search_option_button'>Search</button
      >
    </div>
  </form>
</div>

<style is:inline>
  /* property-filter  */

  .filter {
    position: relative;
  }

  form#property-filter {
    position: sticky;
    top: 2em;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: 1.5em;
    margin-top: 0.5em;
    background: var(--clr-form-bg);
    color: var(--clr-form-ft);
    border-radius: 0.5em;
    box-shadow: 0px 1px 8px 1px #001c5154;
  }
  form#property-filter > h2 {
    margin-top: -0.25em;
    margin-bottom: -0.25em;
    color: var(--clr-primary);
  }
  #property-filter label,
  #property-filter legend {
    position: absolute;
    font-size: 0.9em;
    top: -0.75em;
    left: 0.75em;
    background: white;
    padding: 0 0.25em;
    z-index: 1;
  }
  #property-filter label.form-check-label {
    position: unset;
  }
  #property-filter input::placeholder {
    color: #0000004a;
  }
  #property-filter .noUi-base,
  #property-filter .noUi-handle {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  #property-filter .noUi-base {
    width: 100% !important;
    height: 100% !important;
    position: relative !important;
    z-index: 1 !important;
  }
  #property-filter .noUi-horizontal .noUi-handle {
    width: 1.75em;
    height: 1.75em;
    right: -17px;
    top: -9px;
    border-radius: 100%;
    border: 1px solid #d9d9d9;
    box-shadow: 0px 0px 5px 0px rgb(19 19 28 / 20%);
  }
  #property-filter .noUi-touch-area {
    background-color: #0077ff;
    border-radius: 100%;
    border: 8px solid #fff;
  }
  #property-filter .noUi-handle:after,
  #property-filter .noUi-handle:before {
    display: none;
  }
  #property-filter .noUi-connect {
    background-color: #0077ff !important;
    -webkit-transition: background 450ms;
    transition: background 450ms;
  }
  #property-filter .noUi-horizontal {
    height: 0.75em;
    border-radius: 3px;
    margin-top: 1.55em;
  }
  #property-filter .noUi-tooltip {
    font-size: 1em;
    padding: 0.125em 0.25em;
  }

  .form-control {
    position: relative;
  }
  .custom-slider {
    appearance: none;
    background-color: var(--clr-input-bg);
    border-bottom: var(--input-border-bottom);
    border-left: var(--input-border-left);
    border-radius: var(--input-border-rd);
    border-right: var(--input-border-right);
    border-top: var(--input-border-top);
    color: var(--clr-input-val);
    display: flex;
    gap: 1.25em;
    padding: 1.25em 1.5em 1em 1.25em;
    position: relative;
  }
  .slider-controls {
    width: 100%;
    margin: auto;
  }

  .slider-controls .range-label:last-of-type {
    float: right;
  }

  #property-filter .radio-buttons {
    appearance: none;
    background-color: var(--clr-input-bg);
    border-bottom: var(--input-border-bottom);
    border-left: var(--input-border-left);
    border-radius: var(--input-border-rd);
    border-right: var(--input-border-right);
    border-top: var(--input-border-top);
    color: var(--clr-input-val);
    display: flex;
    padding: 0.56em;
    flex-direction: column;
    position: relative;
  }

  #property-filter .radio-buttons fieldset {
    align-items: center;
    display: flex;
    padding: 0.12em 0;
    gap: 1em;
    border: none;
  }

  #property-filter .radio-buttons .form-control {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .filter {
    padding: 1em 1.5em;
  }

  /* 

.filter {
  position: fixed;
  left: -540px;
  min-height: 100vh;
  width: 100%;
  max-width: 540px;
  z-index: 3;
}
.filter.open {
  left: 0;
}
.filter .panel {
  display: flex;
  flex-direction: column;
  margin: 1em 1.618em 0;
  background: white;
  padding: 0.25em;
  box-shadow: 1px 1px 9px 0px #000 42;
  border-radius: 0.25em;
  border: 0.25em solid white;
}
.filter .panel heading {
  font-size: 1.25em;
  line-height: 1.618em;
} */

  .has-custom-select .custom-select:focus + label {
    font-weight: 600;
  }
</style>

<script>
  // Select all elements with class custom-select
  const customSelects = document.querySelectorAll('.custom-select');

  // Add event listener to each custom select
  // customSelects.forEach((select) => {
  //   select.addEventListener('change', (e) => {
  //     const selectedOption = e.target.options[e.target.selectedIndex];
  //     const label = e.target.nextElementSibling;
  //     label.textContent = selectedOption.textContent;
  //   });
  // });

  // Add event listener to the search button
  // const searchButton = document.getElementById('search');
  // if (searchButton) {
  //   searchButton.addEventListener('click', (e) => {
  //     e.preventDefault();
  //     const form = document.getElementById('property-filter');
  //     const formData = new FormData(form);
  //     const searchParams = new URLSearchParams(formData);
  //     const searchQuery = searchParams.toString();
  //     const actionUrl = '?' + searchQuery; // Adjust this URL according to your endpoint
  //     form.setAttribute('action', actionUrl); // Set the action attribute of the form
  //     form.submit(); // Submit the form
  //   });
  // }
</script>
